package vn.edu.app.client.ui;

import vn.edu.app.client.util.UIUtils;
import vn.edu.app.common.dto.UserDTO;
import vn.edu.app.client.ui.student.*;
import vn.edu.app.client.ui.admin.*;

import javax.swing.*;
import java.awt.*;
import java.util.LinkedHashMap;
import java.util.Map;

public class MainFrame extends JFrame {
    private CardLayout card = new CardLayout();
    private JPanel content = new JPanel(card);

    public MainFrame(UserDTO user) {
        setTitle("Student Management - " + user.getRole());
        setSize(1100, 680);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel sidebar = new JPanel();
        sidebar.setLayout(new GridBagLayout());
        sidebar.setPreferredSize(new Dimension(220, 0));
        sidebar.setBackground(new Color(40, 45, 60));

        GridBagConstraints g = new GridBagConstraints();
        g.gridx=0; g.gridy=0; g.fill=GridBagConstraints.HORIZONTAL; g.weightx=1; g.insets = new Insets(8,12,8,12);

        JLabel logo = new JLabel(UIUtils.icon("icons/dashboard.png", 48,48));
        logo.setHorizontalAlignment(SwingConstants.CENTER);
        logo.setBorder(BorderFactory.createEmptyBorder(20,0,12,0));
        sidebar.add(logo, g);

        Map<String, JPanel> views = new LinkedHashMap<>();
        if ("STUDENT".equalsIgnoreCase(user.getRole())) {
            views.put("Profile", new StudentProfilePanel(user));
            views.put("Grades",  new StudentGradesPanel(user));
        } else {
            views.put("Students", new StudentManagementPanel());
            views.put("Classes",  new ClassManagementPanel());
            views.put("Courses",  new CourseManagementPanel());
            views.put("Grades",   new GradeManagementPanel());
            views.put("Reports",  new ReportPanel());
        }

        int row = 1;
        for (var e : views.entrySet()) {
            JButton btn = new JButton("  " + e.getKey(), // padding
                    UIUtils.icon(iconFor(e.getKey()), 20,20));
            UIUtils.styleSidebarButton(btn);
            g.gridy = row++;
            sidebar.add(btn, g);
            content.add(e.getValue(), e.getKey());
            btn.addActionListener(a -> card.show(content, e.getKey()));
        }

        add(sidebar, BorderLayout.WEST);
        add(content, BorderLayout.CENTER);

        // show first
        if (!views.isEmpty()) card.show(content, views.keySet().iterator().next());
    }

    private String iconFor(String key) {
        return switch (key) {
            case "Profile"  -> "icons/user.png";
            case "Grades"   -> "icons/grades.png";
            case "Students" -> "icons/student.png";
            case "Classes"  -> "icons/class.png";
            case "Courses"  -> "icons/course.png";
            case "Reports"  -> "icons/report.png";
            default -> "icons/dashboard.png";
        };
    }
}
